# CircleCI Configuration for Hackathon Starter
# This configuration runs tests by default. Uncomment ONE deployment option below to deploy.

version: 2.1

# Orbs are reusable packages of CircleCI configuration
orbs:
  python: circleci/python@2.1.0
  gcp-cloud-run: circleci/gcp-cloud-run@1.0.2
  aws-cli: circleci/aws-cli@4.1.3
  aws-ecr: circleci/aws-ecr@9.0.0
  aws-ecs: circleci/aws-ecs@7.1.0

# Jobs define the tasks that will be executed
jobs:
  # Test job - runs by default on every commit
  test:
    docker:
      - image: cimg/python:3.11
    steps:
      - checkout
      
      # Install dependencies
      - run:
          name: Install Python dependencies
          command: |
            pip install -r requirements.txt
      
      # Run tests
      - run:
          name: Run tests
          command: |
            pytest test_app.py -v
            echo "✓ All tests passed!"

  # ========================================
  # DEPLOYMENT OPTIONS
  # Uncomment ONE of the options below to deploy your app
  # All options preserve your test job above
  # ========================================

  # OPTION 1: Deploy to Google Cloud Run (RECOMMENDED - Free Tier)
  # Uncomment this job to deploy to GCP Cloud Run using CircleCI orb
  # Required environment variables: GCP_PROJECT_ID, GCP_REGION, GCLOUD_SERVICE_KEY
  #
  deploy-to-gcp:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - gcp-cloud-run/init
      - run:
          name: Verify GCP environment variables
          command: |
            if [ -z "$GCLOUD_SERVICE_KEY" ]; then
              echo "ERROR: GCLOUD_SERVICE_KEY environment variable is not set"
              exit 1
            else
              echo "✓ GCLOUD_SERVICE_KEY is set (length: ${#GCLOUD_SERVICE_KEY} characters)"
            fi

            if [ -z "$GCP_PROJECT_ID" ]; then
              echo "ERROR: GCP_PROJECT_ID environment variable is not set"
              exit 1
            else
              echo "✓ GCP_PROJECT_ID is set: $GCP_PROJECT_ID"
            fi

            if [ -z "$GCP_REGION" ]; then
              echo "ERROR: GCP_REGION environment variable is not set"
              exit 1
            else
              echo "✓ GCP_REGION is set: $GCP_REGION"
            fi
      - run:
          name: Build and push Docker image
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 -d > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project $GCP_PROJECT_ID
            gcloud builds submit --tag gcr.io/$GCP_PROJECT_ID/hackathon-app
            echo "✓ Docker image built and pushed to GCR"
      - gcp-cloud-run/deploy:
          service-name: hackathon-app
          image: gcr.io/${GCP_PROJECT_ID}/hackathon-app
          region: ${GCP_REGION}
          unauthenticated: true
          platform: managed

  # OPTION 2: Deploy to AWS ECS (Container Service - Free Tier Available)
  # Uncomment this job to deploy to AWS ECS
  # Required environment variables: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_ACCOUNT_ID, AWS_REGION, AWS_ECS_CLUSTER, AWS_ECS_SERVICE
  #
  # deploy-to-ecs:
  #   docker:
  #     - image: cimg/python:3.11
  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - aws-cli/setup
  #     - run:
  #         name: Build and push to ECR
  #         command: |
  #           aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
  #           docker build -t hackathon-app .
  #           docker tag hackathon-app:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/hackathon-app:${CIRCLE_SHA1}
  #           docker tag hackathon-app:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/hackathon-app:latest
  #           docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/hackathon-app:${CIRCLE_SHA1}
  #           docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/hackathon-app:latest
  #           echo "✓ Image pushed to ECR"
  #     - run:
  #         name: Deploy to ECS
  #         command: |
  #           aws ecs update-service \
  #             --cluster $AWS_ECS_CLUSTER \
  #             --service $AWS_ECS_SERVICE \
  #             --force-new-deployment \
  #             --region $AWS_REGION
  #           echo "✓ ECS service updated"

# Workflows define the order in which jobs run
workflows:
  version: 2
  
  # Default workflow - runs on every commit
  build-and-test:
    jobs:
      - test
      
      # Uncomment to deploy to GCP Cloud Run (OPTION 1):
      - deploy-to-gcp:
          requires:
            - test
          filters:
            branches:
              only: main
      
      # Uncomment to deploy to AWS ECS (OPTION 2):
      # - deploy-to-ecs:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: main
